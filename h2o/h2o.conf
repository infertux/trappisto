access-log: "| cat"
error-log: "| cat"

compress: ON

header.set: "X-Frame-Options: DENY"
header.set: "X-Content-Type-Options: nosniff"
header.set: "X-XSS-Protection: 1; mode=block"
header.set: "Strict-Transport-Security: max-age=63072000; includeSubDomains; preload"

hosts:
  "localhost:8000":
    listen:
      port: 8000
      ssl:
        certificate-file: h2o/snakeoil.crt
        key-file: h2o/snakeoil.key
    paths:
      "/":
        file.dir: public
        file.index: [ 'index-dcr.html' ] # adjust to index-{bch,btc,dcr}.html
      "/assets":
        file.dir: public/assets
      "/rpc":
        mruby.handler: |
          require "dos_detector.rb"
          DoSDetector.new(
            strategy: DoSDetector::CountingStrategy.new(period: 10, threshold: 10)
          )
        mruby.handler: |
          lambda do |env|
            body_string = env["rack.input"].read
            body_json = JSON.parse(body_string || "{}")
            method = body_json.fetch("method", nil)
            whitelist = %w(getbestblock getblock getblockhash getrawtransaction searchrawtransactions)

            if whitelist.include?(method)
              [ 399, {}, [] ]
            else
              [ 400, { "Content-Type" => "text/plain" }, [ "Bad Request" ] ]
            end
          end
        proxy.reverse.url: http://localhost:9109/ # dcrd
        # proxy.reverse.url: http://localhost:8332/ # bitcoind
        proxy.preserve-host: ON # to not rewrite the incoming host:port
        proxy.header.set: "Authorization: Basic Yml0Y29pbjpzZWNyZXQ=" # bitcoin:secret
      "/ws":
        proxy.reverse.url: http://localhost:9109/ws # dcrd
        proxy.websocket: ON
        proxy.preserve-host: ON # to not rewrite the incoming host:port
        proxy.header.set: "Authorization: Basic Yml0Y29pbjpzZWNyZXQ=" # bitcoin:secret
